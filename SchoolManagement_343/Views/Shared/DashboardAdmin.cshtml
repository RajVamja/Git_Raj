@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>School Management</title>
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/Content/plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/Content/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/Content/plugins/jqvmap/jqvmap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/Content/dist/css/adminlte.min.css">
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="~/Content/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/Content/plugins/daterangepicker/daterangepicker.css">
    <!-- summernote -->
    <link rel="stylesheet" href="~/Content/plugins/summernote/summernote-bs4.min.css">

    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">

        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__shake" src="~/Content/dist/img/AdminLTELogo.png" alt="AdminLTELogo" height="60" width="60">
        </div>

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="index3.html" class="nav-link">Home</a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="#" class="nav-link">Contact</a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="~/Content/dist/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Hello,  @Session["userNameS"]</a>
                    </div>
                </div>



                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <!-- Add icons to the links using the .nav-icon class
                             with font-awesome or any other icon font library -->
                        <li class="nav-item menu-open">
                            <a href="#" class="nav-link active">
                                <i class="nav-icon fas fa-chart-line"></i>
                                <p>
                                    Dashboard
                                    <i class="right fas fa-angle-left"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a class="nav-link" href="@Url.Action("dashboard", "User")">
                                        <i class="fas fa-home nav-icon"></i>
                                        <p>Home</p>
                                    </a>
                                </li>
                            </ul>
                        </li>




                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-user-graduate"></i>
                                <p>
                                    Student
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("studentDetails", "Students")" class="nav-link">
                                        <i class="fas fa-list nav-icon"></i>
                                        <p>Student List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link" href="@Url.Action("AddStudent", "Students")">
                                        <i class="fas fa-user-plus nav-icon"></i>
                                        <p>Add Student</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-user"></i>
                                <p>
                                    Teacher
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("teacherDetails", "Teacher")" class="nav-link">
                                        <i class="fas fa-list-ul nav-icon"></i>
                                        <p>Teacher List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a href="@Url.Action("AddTeacher", "Teacher")" class="nav-link">
                                        <i class="fas fa-user-plus nav-icon"></i>
                                        <p>Add Teacher</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-book-open"></i>
                                <p>
                                    Subject
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("SubjectList", "Subjects")" class="nav-link">
                                        <i class="fas fa-list nav-icon"></i>
                                        <p>Subject List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a href="@Url.Action("AddSubject", "Subjects")" class="nav-link">
                                        <i class="fas fa-plus nav-icon"></i>
                                        <p>Add Subject</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-globe"></i>
                                <p>
                                    Country
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("GetCountryList", "Countries")" class="nav-link">
                                        <i class="fas fa-list nav-icon"></i>
                                        <p>Country List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a href="@Url.Action("AddCountry", "Countries")" class="nav-link">
                                        <i class="fas fa-plus nav-icon"></i>
                                        <p>Add Country</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-city"></i>
                                <p>
                                    State
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("StateList", "States")" class="nav-link">
                                        <i class="fas fa-list nav-icon"></i>
                                        <p>State List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a href="@Url.Action("AddState", "States")" class="nav-link">
                                        <i class="fas fa-plus nav-icon"></i>
                                        <p>Add State</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li class="nav-item">
                            <a href="#" class="nav-link">
                                <i class="nav-icon fas fa-building"></i>
                                <p>
                                    City
                                    <i class="fas fa-angle-left right"></i>
                                </p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item">
                                    <a href="@Url.Action("CityList", "Cities")" class="nav-link">
                                        <i class="fas fa-list nav-icon"></i>
                                        <p>City List</p>
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a href="@Url.Action("AddCity", "Cities")" class="nav-link">
                                        <i class="fas fa-plus nav-icon"></i>
                                        <p>Add City</p>
                                    </a>
                                </li>
                            </ul>
                        </li>

                        <li class="nav-item">
                            <a href="@Url.Action("Logout", "User")" class="nav-link">
                                <i class="fas fa-sign-out-alt nav-icon"></i>
                                <p>Logout</p>
                            </a>
                        </li>



                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->

            @RenderBody()



            <!-- /.content -->
        </div>

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="~/Content/plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge('uibutton', $.ui.button)
    </script>
    <!-- Bootstrap 4 -->
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="~/Content/plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="~/Content/plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="~/Content/plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="~/Content/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/Content/plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/Content/plugins/moment/moment.min.js"></script>
    <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="~/Content/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="~/Content/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/Content/dist/js/adminlte.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/Content/dist/js/demo.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="~/Content/dist/js/pages/dashboard.js"></script>
</body>
</html>













@*public CustomUserModel Login(CustomUserModel u)
    {
          var user = rv.Users.FirstOrDefault(a => a.userName.Equals(u.userName) && a.passWord.Equals(u.passWord));
          return UserHelper.convert(user);
    }


    [HttpPost]
    public ActionResult Login(CustomUserModel user)
    {
        CustomUserModel authenticatedUser = userobj.Login(user);
        if (authenticatedUser != null)
        {
            Session["uIdS"] = authenticatedUser.uId.ToString();
            Session["userNameS"] = authenticatedUser.userName.ToString();
            Session["firstNameS"] = authenticatedUser.firstName.ToString();
            return RedirectToAction("dashboard", "User");
        }
        else
        {
            ViewBag.notify = "Invalid username or password!";
        }
        return View("Login");
    }


    @{
        string firstName = Session["firstNameS"].ToString();
    }
    Welcome, @firstName!


    public class UserHelper
    {
        public static User convert(CustomUserModel customUser)
        {
            User user = new User
            {
                uId = customUser.uId,
                fName = customUser.fName,
                lName = customUser.lName,
                userName = customUser.userName,
                passWord = customUser.passWord
            };

            return user;
        }
    }*@















@*create database RajVamja_schoolmanagement_343

use RajVamja_schoolmanagement_343

create table Users(
	uId int identity(1,1) primary key,
	fName varchar(100) not null,
	lName varchar(100) not null,
	userName varchar(50) not null,
	passWord varchar(100) not null
);
--------------------------------------------------------------------
create table Subject(
	subId int identity(1,1) primary key,
	subName varchar(50) not null
);


insert into Subject
values('Physics'),
	  ('Chamestry'),
	  ('Maths'),
	  ('Biology')

create proc SP_subjectList
as
begin
select * from Subject
end

exec SP_subjectList
--------------------------------------------------------------------
create table Teacher(
	teacherId int identity(1,1) primary key
);

---------------------------------------------------------------------

create table Countries(
	cId int primary key identity(1,1),
	cName varchar(50)
);


insert into Countries
values('india'),
	  ('Canada'),
	  ('USA')
--------------------------------------------------------------
create table States(
	sId int primary key identity(1,1),
	sName varchar(50),
	cId int foreign key references Countries(cId)
);

insert into States
values('Gujarat', 1),
	  ('Maharastra', 1),
	  ('Karnataka', 1),
	  ('Alberta', 2),
	  ('Manitoba', 2),
	  ('Ontario', 2),
	  ('Alaska', 3),
	  ('California', 3),
	  ('Hawaii', 3)

create or alter proc SP_stateList
as
begin
select  s.sId ,s.sName, c.cId,c.cName from States as s inner join Countries as c on s.cId = c.cId
end

exec SP_stateList
-----------------------------------------------------------------
create table Cities(
	cityId int primary key identity(1,1),
	cityName varchar(50),
	sId int foreign key references States(sId),
	cId int foreign key references Countries(cId)
);

insert into Cities
values ('Surat', 1,1),
	   ('Ahmedabad', 1,1),
	   ('Baroda', 1,1),
	   ('Rajkot', 1,1),
	   ('Mumbai', 2,1),
	   ('Pune', 2,1),
	   ('Nagpur', 2,1),
	   ('Nashik', 2,1),
	   ('Bangaluru', 3,1),
	   ('Bhadravati', 3,1),
	   ('Gulbarga', 3,1),
	   ('Mysore', 3,1),
	   ('Calgary',4,2),
	   ('Edmonton',4,2),
	   ('St. Albert',4,2),
	   ('Winnipeg', 5,2),
	   ('The Pas', 5,2),
	   ('Brandon', 5,2),
	   ('Ottawa', 6,2),
	   ('Hamilton', 6,2),
	   ('Toronto', 6,2),
	   ('Skagway', 7,3),
	   ('Talkeenta', 7,3),
	   ('Homer', 7,3),
	   ('Los Angeles',8,3),
	   ('San Francisco',8,3),
	   ('Oakland',8,3),
	   ('San Diego',8,3),
	   ('Pearl City', 9,3),
	   ('Ocean Pointe', 9,3),
	   ('Makawao', 9,3),
	   ('Maili', 9,3)

create or alter proc SP_cityList
as
begin
select city.cityId,city.cityName, s.sName,c.cName,city.cId, city.sId from Cities as city inner join Countries as c on city.cId = c.cId inner join States as s on s.sId = city.sId
end

exec SP_cityList
------------------------------------------------------------------

create table teacher(
	tId int primary key identity(1,1),
	fName varchar(50) not null,
	lName varchar(50) not null,
	DOB date not null,
	tPhone varchar(20) not null,
	tEmail varchar(50) not null,
	Gender varchar(10) not null,
	aAddress varchar(255) not null,
	subjects int not null,   -- varchar(100) --
	city int foreign key references Cities(cityId) not null,
	state int foreign key references States(sId) not null,
	country int foreign key references Countries(cId) not null
);

-- Function for subjects name in teacher table --

create or ALTER function func_Subjects(@t_id int)
     RETURNS VARCHAR(100)
     as
     BEGIN
        DECLARE @ANY VARCHAR(255)
        SET @ANY = '';
        SELECT @ANY = @ANY  + (select subName from Subject where subId = value) + ',' FROM teacher as t
        left join Subject as sub on cast(sub.subId as varchar(20)) = sub.subName 
        CROSS APPLY string_split(t.subjects, ',') WHERE t.tId = @t_id;
        RETURN @ANY
        END

        select dbo.func_Subjects(4);



        -- Store procedure for subjects name in teacher table --

        create or alter proc SP_teachersDetail
        as
        BEGIN
        SELECT t.tId, t.fName+' ' +t.lName as 'Teacher Name', t.DOB, t.tPhone,t.tEmail,t.Gender, t.aAddress, dbo.func_Subjects(t.tId) as 'subjects',
        city.cityId, city.cityName,  s.sId,s.sName, c.cId, c.cName  FROM teacher as t
        inner join Countries c on t.country = c.cid
        inner join States s on t.state = s.sid
        inner join Cities city on t.city = city.cityId
        end

        exec SP_teachersDetail
        -----------------------------------------------------

        create table students(
        stdId int primary key identity(1,1),
        fName varchar(50) not null,
        lName varchar(50) not null,
        DOB date not null,
        sPhone varchar(20) not null,
        sEmail varchar(50) not null,
        Gender varchar(10) not null,
        sAddress varchar(255) not null,
        teacher varchar(100) not null,
        city int foreign key references Cities(cityId) not null,
        state int foreign key references States(sId) not null,
        country int foreign key references Countries(cId) not null
        );

        -- Function for teachers name in student table --
        create or ALTER function func_Teacher(@std_id int)
        RETURNS VARCHAR(100)
        as
        BEGIN
        DECLARE @ANY VARCHAR(255)
        SET @ANY = '';
        SELECT @ANY = @ANY  + (select fName from teacher where tId = value) + ',' FROM students as s
        left join teacher as t on cast(t.tId as varchar(20)) = s.teacher 
        CROSS APPLY string_split(s.teacher, ',') WHERE s.stdId = @std_id;
        RETURN @ANY
        END

        select dbo.func_Teacher(2);


        -- Store procedure for teachers name in student table --

        create or alter proc SP_studentsDetail
        as
        BEGIN
        SELECT stu.stdId, stu.fName+' ' +stu.lName as 'Student Name', stu.DOB, stu.sPhone,stu.sEmail,stu.Gender, stu.sAddress, dbo.func_Teacher(stu.stdId) as 'teacher', 
        city.cityId, city.cityName,  s.sId,s.sName, c.cId, c.cName,
        CASE stu.studentType
        WHEN 0 THEN 'Hosteller'
        WHEN 1 THEN 'Day-Scholar'
        ELSE 'Unknown'
        END AS 'Student Type'
        FROM students as stu
        inner join Countries c on stu.country = c.cid
        inner join States s on stu.state = s.sid
        inner join Cities city on stu.city = city.cityId
        end

        exec SP_studentsDetail
        -------------------------------------------------------------------------------
        select * from teacher
        select * from States
        select * from students
        delete from Countries where cId = 9




        CREATE or ALTER PROC sp_DeleteCity(@cityId int)
        AS
        BEGIN
        if not exists (select * from students where city = @cityId) and not exists (select * from teacher where city = @cityId)
        begin
        DELETE FROM Cities WHERE cityId = @cityId
        end
        END


        CREATE or ALTER PROC sp_DeleteState(@stateId int)
        AS
        BEGIN
        if not exists (select * from students where state = @stateId) and not exists (select * from teacher where state = @stateId)

        DELETE FROM Cities WHERE sId = @stateId
        DELETE FROM States WHERE sId = @stateId

        END


        CREATE or ALTER PROCEDURE sp_DeleteCountry( @countryId int)
        AS
        BEGIN
        if not exists (select * from students where country = @countryId) and not exists (select * from teacher where country = @countryId)

        DELETE FROM Cities WHERE sId IN (SELECT sId FROM States WHERE cId = @countryId)
        DELETE FROM States WHERE cId = @countryId
        DELETE FROM Countries WHERE cId = @countryId

        END


        CREATE or ALTER PROC sp_DeleteSubject(@subId int)
        AS
        BEGIN
        if not exists (select * from teacher where subjects like '%'+ convert(varchar(100),@subId) +'%')
        begin
        DELETE FROM Cities WHERE cityId = @subId
        end
        END



        CREATE or ALTER PROC sp_DeleteStudent(@stdId int)
        AS
        BEGIN
        begin
        DELETE FROM students WHERE stdId = @stdId
        end
        END


        select * from teacher
        select * from Subject


        select * from teacher where subjects like '%'+ '1' +'%'


        select * from students

        ALTER TABLE students
        ALTER COLUMN studentType bigint not null;*@