@model SchoolManagement_343.Models.Context.student

@{
    Layout = "~/Views/Shared/DashboardAdmin.cshtml";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<link defer href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script defer src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<div class="d-flex justify-content-center">
    <h2 class="mt-4">Edit Student</h2>
</div>


<div class="wrapper">
    <!-- Main content -->
    <section class="content">
        <div class="container">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">


                    <!-- Horizontal Form -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Student</h3>
                        </div>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.stdId)

                                <div class="form-group">
                                    <div class="col-md-12 mt-3">
                                        @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.lName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.lName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.sPhone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.sPhone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.sEmail, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.sEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "" })
                                            <div class="d-flex">
                                                <div class="col-sm-1 ms-4">
                                                    @Html.RadioButtonFor(m => m.Gender, "Male") Male
                                                </div>
                                                <div class="col-sm-1">
                                                    @Html.RadioButtonFor(m => m.Gender, "Female") Female
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.sAddress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.sAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @*@Html.EditorFor(model => model.subjects, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.DropDownList("teachers", ViewBag.TeacherList as SelectList, "Select Teachers", new { @class = "form-control ddlMultiSlectBox", @multiple = "multiple", @id = "teachers" })
                                        @Html.HiddenFor(model => model.teacher, new { @class = "tValues" })
                                        @*@Html.DropDownList("teacher1", new SelectList(ViewBag.TeacherList, "tId", "Teacher_Name"), new { @class = "form-control ddlMultiSlectBox", @multiple = "multiple", @id = "teacher" })*@

                                        @Html.ValidationMessageFor(model => model.teacher, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-md-12 d-flex justify-content-center form-group">
                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(a => a.country, ViewBag.CountryList as SelectList, "Select Country", new { @class = "form-control", @id = "cId" })
                                            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                                        </div>



                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(a => a.state, ViewBag.StateList as SelectList, "Select State", new { @class = "form-control", @id = "sId" })
                                            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                                        </div>



                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(a => a.city, ViewBag.CityList as SelectList, "Select City", new { @class = "form-control", @id = "cityId" })
                                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-md-12">
                                        @*@Html.DropDownListFor(model => model.studentType, new SelectList(ViewBag.studentType, "ID", "Value"), new { @class = "form-control" })*@
                                        @Html.EnumDropDownListFor(model => model.studentTypeE, "Select Student Type", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.studentTypeE, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="card-footer d-flex justify-content-center">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                </div>

                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>



<script>
    $(document).ready(function () {

        $('#teachers').select2({
            multiple: true
        });

        if ($('.tValues').length > 0) {
            $('#teachers').val($('.tValues').val().split(','));
            $('#teachers').trigger('change');
        }

        $("#teachers").change(function () {
            $(".tValues").val(Array.from($("#teachers option:selected")).map((e) => e.value).join(","));
        })

            $("#cId").change(function () {
                var countryId = $(this).val();
                $.ajax({
                    type: "post",
                    url: "/Students/GetStateList?cId=" + countryId,
                    contentType: "html",
                    success: function (response) {
                        $("#sId").empty();
                        $("#sId").append(response);
                    }
                })
            })

            $("#sId").change(function () {
                var countryId = $(this).val();
                $.ajax({
                    type: "post",
                    url: "/Students/GetCityList?sId=" + countryId,
                    contentType: "html",
                    success: function (response) {
                        $("#cityId").empty();
                        $("#cityId").append(response);
                    }
                })
            })


        var date = new Date('@Model.DOB');
        var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
        var localDate = new Date(utcDate.toLocaleString());
        $("#DOB").val(localDate.toISOString().split('T')[0]);
    })
</script>

